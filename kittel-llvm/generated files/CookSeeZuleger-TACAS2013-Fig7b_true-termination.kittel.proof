Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.1, nondef.0, nondef.2)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.end_in() [ v_x.0 <= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.end_in() [ v_y.0 <= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.end_in() [ v_z.0 <= 0 ]
	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0)
	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, v_x.0 - 1, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0)
	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, v_x.0 - 1, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ] with all rules in problem 2, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
3:	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0)
	eval_main_while.body_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, v_x.0 - 1, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, v_x.0 - 1, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

By chaining the rule eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, v_x.0 - 1, v_z.0) with all rules in problem 4, the following new rules are obtained:
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
5:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

By chaining the rule eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) with all rule in problem 6, the following new rules are obtained:
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
We thus obtain the following problem:
7:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.then.9_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0)
	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)

By chaining the rule eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) with all rule in problem 8, the following new rules are obtained:
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
We thus obtain the following problem:
9:	eval_main_if.else.12_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ] with all rules in problem 10, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
We thus obtain the following problem:
11:	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]

The termination graph of problem 11 contains 1 nontrivial SCC:
12:	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ] with all rules in problem 12, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
13:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 13 contains 1 nontrivial SCC:
14:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

A polynomial interpretation with
	Pol(eval_main_if.then_in) = X_1 - 1
	Pol(eval_main_if.else_in) = X_1 - 1
	Pol(eval_main_while.cond_in) = X_1 - 1
removes the following rule from problem 14:
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
15:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 15 contains 1 nontrivial SCC:
16:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

By chaining the rule eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ] with all rules in problem 16, the following new rules are obtained:
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
We thus obtain the following problem:
17:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]

The termination graph of problem 17 contains 1 nontrivial SCC:
18:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]

By chaining the rule eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ] with all rules in problem 18, the following new rules are obtained:
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
19:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 19 contains 1 nontrivial SCC:
20:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

A polynomial interpretation with
	Pol(eval_main_if.else_in) = X_1 - 1
	Pol(eval_main_while.cond_in) = X_1 - 1
	Pol(eval_main_if.then_in) = X_1 - 1
removes the following rule from problem 20:
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
21:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 21 contains 1 nontrivial SCC:
22:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5)
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

By chaining the rule eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, v_x.0, nondef.5) with all rules in problem 22, the following new rules are obtained:
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, nondef.6, nondef.5 - 1) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 ]
We thus obtain the following problem:
23:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, nondef.6, nondef.5 - 1) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 ]

The termination graph of problem 23 contains 1 nontrivial SCC:
24:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, nondef.6, nondef.5 - 1) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 ]

A polynomial interpretation with
	Pol(eval_main_if.else_in) = X_1 - 1
	Pol(eval_main_while.cond_in) = X_1 - 1
	Pol(eval_main_if.then_in) = X_1 - 1
removes the following rules from problem 24:
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0 - 1, v_x.0 - 1, nondef.5) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0 - 1, nondef.6, nondef.5 - 1) [ v_x.0 > 0 /\ v_y.0 - 1 > 0 /\ nondef.5 > 0 ]
We thus obtain the following problem:
25:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

The termination graph of problem 25 contains 1 nontrivial SCC:
26:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

A polynomial interpretation with
	Pol(eval_main_if.else_in) = X_1 + 3*X_3 - 5
	Pol(eval_main_while.cond_in) = X_1 + 3*X_3 - 3
	Pol(eval_main_if.then_in) = X_1 + 3*X_3 - 4
removes the following rules from problem 26:
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.else_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
We thus obtain the following problem:
27:	eval_main_if.else_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1)
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 1, v_z.0) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 1 > 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]
	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]

The termination graph of problem 27 contains 2 nontrivial SCCs:
28:	eval_main_if.then_in(v_y.0, v_x.0, v_z.0) -> eval_main_if.then_in(v_y.0, v_x.0 - 2, v_z.0) [ v_x.0 - 1 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 /\ v_x.0 - 2 > 0 ]

29:	eval_main_while.cond_in(v_y.0, v_x.0, v_z.0) -> eval_main_while.cond_in(v_y.0, nondef.6, v_z.0 - 1) [ v_x.0 > 0 /\ v_y.0 > 0 /\ v_z.0 > 0 ]

A polynomial interpretation with
	Pol(eval_main_if.then_in) = X_2
removes all rules from problem 28.

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_3
removes all rules from problem 29.

Termination successfully shown!

Time: 2.584 sec (SMT: 2.346 sec)
