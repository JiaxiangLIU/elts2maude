Initial termination problem:
1:	eval_cstrlen_start() -> eval_cstrlen_entry_in()
	eval_cstrlen_entry_in() -> eval_cstrlen_for.cond_in()
	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.inc_in()
	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.end_in()
	eval_cstrlen_for.inc_in() -> eval_cstrlen_for.cond_in()
	eval_cstrlen_for.end_in() -> eval_cstrlen_stop()
	eval_cstrncmp_start(v_n) -> eval_cstrncmp_entry_in(v_n)
	eval_cstrncmp_entry_in(v_n) -> eval_cstrncmp_return_in() [ v_n = 0 ]
	eval_cstrncmp_entry_in(v_n) -> eval_cstrncmp_do.body_in(v_n) [ v_n < 0 ]
	eval_cstrncmp_entry_in(v_n) -> eval_cstrncmp_do.body_in(v_n) [ v_n > 0 ]
	eval_cstrncmp_do.body_in(v_n.addr.0) -> eval_cstrncmp_if.then.4_in()
	eval_cstrncmp_do.body_in(v_n.addr.0) -> eval_cstrncmp_if.end.8_in(v_n.addr.0)
	eval_cstrncmp_if.then.4_in() -> eval_cstrncmp_return_in()
	eval_cstrncmp_if.end.8_in(v_n.addr.0) -> eval_cstrncmp_return_in()
	eval_cstrncmp_if.end.8_in(v_n.addr.0) -> eval_cstrncmp_do.cond_in(v_n.addr.0)
	eval_cstrncmp_do.cond_in(v_n.addr.0) -> eval_cstrncmp_do.body_in(v_n.addr.0 - 1) [ v_n.addr.0 - 1 < 0 ]
	eval_cstrncmp_do.cond_in(v_n.addr.0) -> eval_cstrncmp_do.body_in(v_n.addr.0 - 1) [ v_n.addr.0 - 1 > 0 ]
	eval_cstrncmp_do.cond_in(v_n.addr.0) -> eval_cstrncmp_return_in() [ v_n.addr.0 - 1 = 0 ]
	eval_cstrncmp_return_in() -> eval_cstrncmp_stop()
	eval_cstrstr_start() -> eval_cstrstr_entry_in()
	eval_cstrstr_entry_in() -> eval_cstrstr_if.then_in(nondef.0) [ nondef.0 < 0 ]
	eval_cstrstr_entry_in() -> eval_cstrstr_if.then_in(nondef.0) [ nondef.0 > 0 ]
	eval_cstrstr_entry_in() -> eval_cstrstr_return_in()
	eval_cstrstr_if.then_in(v_6) -> eval_cstrstr_do.body.2_in(v_6)
	eval_cstrstr_do.body.2_in(v_conv9) -> eval_cstrstr_return_in()
	eval_cstrstr_do.body.2_in(v_conv9) -> eval_cstrstr_do.cond_in(v_conv9, nondef.2) [ nondef.2 < 0 ]
	eval_cstrstr_do.body.2_in(v_conv9) -> eval_cstrstr_do.cond_in(v_conv9, nondef.2) [ nondef.2 > 0 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9) [ v_7 < v_conv9 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9) [ v_7 > v_conv9 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.cond.12_in(v_conv9, v_7) [ v_7 = v_conv9 ]
	eval_cstrstr_do.cond.12_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9)
	eval_cstrstr_do.cond.12_in(v_conv9, v_7) -> eval_cstrstr_do.end.16_in()
	eval_cstrstr_do.end.16_in() -> eval_cstrstr_return_in()
	eval_cstrstr_return_in() -> eval_cstrstr_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 3 nontrivial SCCs:
2:	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.inc_in()
	eval_cstrlen_for.inc_in() -> eval_cstrlen_for.cond_in()

3:	eval_cstrncmp_do.body_in(v_n.addr.0) -> eval_cstrncmp_if.end.8_in(v_n.addr.0)
	eval_cstrncmp_if.end.8_in(v_n.addr.0) -> eval_cstrncmp_do.cond_in(v_n.addr.0)
	eval_cstrncmp_do.cond_in(v_n.addr.0) -> eval_cstrncmp_do.body_in(v_n.addr.0 - 1) [ v_n.addr.0 - 1 < 0 ]
	eval_cstrncmp_do.cond_in(v_n.addr.0) -> eval_cstrncmp_do.body_in(v_n.addr.0 - 1) [ v_n.addr.0 - 1 > 0 ]

4:	eval_cstrstr_do.body.2_in(v_conv9) -> eval_cstrstr_do.cond_in(v_conv9, nondef.2) [ nondef.2 < 0 ]
	eval_cstrstr_do.body.2_in(v_conv9) -> eval_cstrstr_do.cond_in(v_conv9, nondef.2) [ nondef.2 > 0 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9) [ v_7 < v_conv9 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9) [ v_7 > v_conv9 ]
	eval_cstrstr_do.cond_in(v_conv9, v_7) -> eval_cstrstr_do.cond.12_in(v_conv9, v_7) [ v_7 = v_conv9 ]
	eval_cstrstr_do.cond.12_in(v_conv9, v_7) -> eval_cstrstr_do.body.2_in(v_conv9)

By chaining the rule eval_cstrlen_for.cond_in() -> eval_cstrlen_for.inc_in() with all rule in problem 2, the following new rules are obtained:
	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.cond_in()
We thus obtain the following problem:
5:	eval_cstrlen_for.inc_in() -> eval_cstrlen_for.cond_in()
	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.cond_in()

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_cstrlen_for.cond_in() -> eval_cstrlen_for.cond_in()

The following termination problem could not be handled:
eval_cstrlen_for.cond_in() -> eval_cstrlen_for.cond_in()

Time: 1.332 sec (SMT: 1.310 sec)
