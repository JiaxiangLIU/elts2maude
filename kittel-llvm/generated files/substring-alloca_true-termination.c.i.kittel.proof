Initial termination problem:
1:	eval_substring_start() -> eval_substring_entry_in()
	eval_substring_entry_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_return_in()
	eval_substring_while.cond.2_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_return_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_return_in() -> eval_substring_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond.2_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()

By chaining the rule eval_substring_while.cond_in() -> eval_substring_while.cond.2_in() with all rules in problem 2, the following new rules are obtained:
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
We thus obtain the following problem:
3:	eval_substring_while.cond.2_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_substring_while.cond.2_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()

By chaining the rule eval_substring_while.cond.2_in() -> eval_substring_land.rhs_in() with all rules in problem 4, the following new rules are obtained:
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
We thus obtain the following problem:
5:	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.end_in()

By chaining the rule eval_substring_while.cond.2_in() -> eval_substring_while.end_in() with all rule in problem 6, the following new rules are obtained:
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
We thus obtain the following problem:
7:	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_substring_land.rhs_in() -> eval_substring_while.body.10_in()
	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()

By chaining the rule eval_substring_land.rhs_in() -> eval_substring_while.body.10_in() with all rule in problem 8, the following new rules are obtained:
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
We thus obtain the following problem:
9:	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_substring_land.rhs_in() -> eval_substring_while.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()

By chaining the rule eval_substring_land.rhs_in() -> eval_substring_while.end_in() with all rule in problem 10, the following new rules are obtained:
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
We thus obtain the following problem:
11:	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()

The termination graph of problem 11 contains 1 nontrivial SCC:
12:	eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()

By chaining the rule eval_substring_while.body.10_in() -> eval_substring_while.cond.2_in() with all rules in problem 12, the following new rules are obtained:
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
We thus obtain the following problem:
13:	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()

The termination graph of problem 13 contains 1 nontrivial SCC:
14:	eval_substring_while.end_in() -> eval_substring_if.end_in()
	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()

By chaining the rule eval_substring_while.end_in() -> eval_substring_if.end_in() with all rule in problem 14, the following new rules are obtained:
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
We thus obtain the following problem:
15:	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()

The termination graph of problem 15 contains 1 nontrivial SCC:
16:	eval_substring_if.end_in() -> eval_substring_while.cond_in()
	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()

By chaining the rule eval_substring_if.end_in() -> eval_substring_while.cond_in() with all rules in problem 16, the following new rules are obtained:
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()
We thus obtain the following problem:
17:	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()

The termination graph of problem 17 contains 1 nontrivial SCC:
18:	eval_substring_while.cond_in() -> eval_substring_land.rhs_in()
	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()

By chaining the rule eval_substring_while.cond_in() -> eval_substring_land.rhs_in() with all rules in problem 18, the following new rules are obtained:
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_if.end_in()
We thus obtain the following problem:
19:	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_if.end_in()

The termination graph of problem 19 contains 1 nontrivial SCC:
20:	eval_substring_while.cond_in() -> eval_substring_while.end_in()
	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_if.end_in()

By chaining the rule eval_substring_while.cond_in() -> eval_substring_while.end_in() with all rule in problem 20, the following new rules are obtained:
	eval_substring_while.cond_in() -> eval_substring_while.cond_in()
We thus obtain the following problem:
21:	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_if.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond_in()

The termination graph of problem 21 contains 1 nontrivial SCC:
22:	eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
	eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
	eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
	eval_substring_land.rhs_in() -> eval_substring_if.end_in()
	eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
	eval_substring_while.body.10_in() -> eval_substring_if.end_in()
	eval_substring_while.end_in() -> eval_substring_while.cond_in()
	eval_substring_if.end_in() -> eval_substring_land.rhs_in()
	eval_substring_if.end_in() -> eval_substring_while.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
	eval_substring_while.cond_in() -> eval_substring_if.end_in()
	eval_substring_while.cond_in() -> eval_substring_while.cond_in()

The following termination problem could not be handled:
eval_substring_while.cond.2_in() -> eval_substring_while.body.10_in()
eval_substring_while.cond.2_in() -> eval_substring_if.end_in()
eval_substring_land.rhs_in() -> eval_substring_while.cond.2_in()
eval_substring_land.rhs_in() -> eval_substring_if.end_in()
eval_substring_while.body.10_in() -> eval_substring_while.body.10_in()
eval_substring_while.body.10_in() -> eval_substring_if.end_in()
eval_substring_while.end_in() -> eval_substring_while.cond_in()
eval_substring_if.end_in() -> eval_substring_land.rhs_in()
eval_substring_if.end_in() -> eval_substring_while.end_in()
eval_substring_while.cond_in() -> eval_substring_while.cond.2_in()
eval_substring_while.cond_in() -> eval_substring_if.end_in()
eval_substring_while.cond_in() -> eval_substring_while.cond_in()

Time: 1.494 sec (SMT: 1.441 sec)
