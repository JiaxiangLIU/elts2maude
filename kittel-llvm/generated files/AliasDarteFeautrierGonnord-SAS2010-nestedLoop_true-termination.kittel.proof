Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.3, nondef.4, nondef.5, 0) [ 0 <= nondef.3 /\ 0 <= nondef.4 /\ 0 <= nondef.5 ]
	eval_main_entry_in() -> eval_main_if.end_in()
	eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, 0, v_i.0) [ v_i.0 < v_call3 ]
	eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.0) -> eval_main_if.end_in() [ v_i.0 >= v_call3 ]
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 < v_call4 ]
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 >= v_call4 ]
	eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_j.0 + 1, v_i.1)
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_add, v_k.0) [ v_k.0 >= v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)
	eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.1 + 1)
	eval_main_if.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, 0, v_i.0) [ v_i.0 < v_call3 ]
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 < v_call4 ]
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 >= v_call4 ]
	eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_j.0 + 1, v_i.1)
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_add, v_k.0) [ v_k.0 >= v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)
	eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.1 + 1)

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = 3*X_1 - 3*X_4
	Pol(eval_main_while.cond.10_in) = 3*X_1 - 3*X_6 - 1
	Pol(eval_main_while.body.12_in) = 3*X_1 - 3*X_6 - 1
	Pol(eval_main_while.end.17_in) = 3*X_1 - 3*X_6 - 2
	Pol(eval_main_while.cond.13_in) = 3*X_1 - 3*X_8 - 1
	Pol(eval_main_while.body.15_in) = 3*X_1 - 3*X_8 - 2
removes the following rule from problem 2:
	eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, 0, v_i.0) [ v_i.0 < v_call3 ]
We thus obtain the following problem:
3:	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 < v_call4 ]
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 >= v_call4 ]
	eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_j.0 + 1, v_i.1)
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_add, v_k.0) [ v_k.0 >= v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)
	eval_main_while.end.17_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond_in(v_call3, v_call4, v_call5, v_i.1 + 1)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 < v_call4 ]
	eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_j.0 + 1, v_i.1)
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_add, v_k.0) [ v_k.0 >= v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)

A polynomial interpretation with
	Pol(eval_main_while.cond.10_in) = 3*X_2 - 3*X_5 - 3
	Pol(eval_main_while.body.12_in) = 3*X_2 - 3*X_5 - 4
	Pol(eval_main_while.cond.13_in) = 3*X_2 - 3*X_7 - 2
	Pol(eval_main_while.body.15_in) = 3*X_2 - 3*X_7 - 2
removes the following rule from problem 4:
	eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) [ v_j.0 < v_call4 ]
We thus obtain the following problem:
5:	eval_main_while.body.12_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_j.0 + 1, v_i.1)
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.10_in(v_call3, v_call4, v_call5, v_i.0, v_add, v_k.0) [ v_k.0 >= v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)

A polynomial interpretation with
	Pol(eval_main_while.cond.13_in) = 2*X_3 - 2*X_8
	Pol(eval_main_while.body.15_in) = 2*X_3 - 2*X_8 - 1
removes the following rule from problem 6:
	eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) [ v_k.0 < v_call5 ]
We thus obtain the following problem:
7:	eval_main_while.body.15_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0) -> eval_main_while.cond.13_in(v_call3, v_call4, v_call5, v_i.0, v_j.0, v_i.1, v_add, v_k.0 + 1)

The termination graph of problem 7 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.485 sec (SMT: 0.469 sec)
