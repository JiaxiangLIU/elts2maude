Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0)
	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.end_in() [ v_i.0 < -5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.end_in() [ v_i.0 > 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 - 1 < 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 - 1 >= 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 + 1) [ v_i.0 <= 0 /\ v_i.0 < 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]
	eval_main_while.end_in() -> eval_main_stop()

Testing for unsatisfiable constraints removes the following rule from problem 1:
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 - 1 < 0 ]
We thus obtain the following problem:
2:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0)
	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.end_in() [ v_i.0 < -5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.end_in() [ v_i.0 > 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 - 1 >= 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 + 1) [ v_i.0 <= 0 /\ v_i.0 < 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 2 contains 1 nontrivial SCC:
3:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 - 1 >= 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 + 1) [ v_i.0 <= 0 /\ v_i.0 < 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -X_1 + 2*X_1^2 + 1
	Pol(eval_main_while.body_in) = -X_1 + 2*X_1^2 + 1
removes the following rules from problem 3:
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 - 1 >= 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 + 1) [ v_i.0 <= 0 /\ v_i.0 < 0 ]
We thus obtain the following problem:
4:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]

The termination graph of problem 4 contains 1 nontrivial SCC:
5:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]

By chaining the rule eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 ] with all rule in problem 5, the following new rules are obtained:
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 /\ v_i.0 <= 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
6:	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 <= 0 /\ v_i.0 >= 0 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 /\ v_i.0 <= 0 /\ v_i.0 >= 0 ]

The termination graph of problem 6 contains 1 nontrivial SCC:
7:	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 /\ v_i.0 <= 0 /\ v_i.0 >= 0 ]

The following termination problem could not be handled:
eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 >= -5 /\ v_i.0 <= 5 /\ v_i.0 <= 0 /\ v_i.0 >= 0 ]

Time: 0.596 sec (SMT: 0.576 sec)
