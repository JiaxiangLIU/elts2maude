Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.1, nondef.0)
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.body_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.end_in() [ v_i.0 <= 0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.end_in() [ v_j.0 <= 0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 < v_j.0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0 - 1) [ v_i.0 > v_j.0 /\ v_i.0 <= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0) [ v_i.0 <= v_j.0 /\ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.end_in() -> eval_main_stop()

Testing for unsatisfiable constraints removes the following rules from problem 1:
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0 - 1) [ v_i.0 > v_j.0 /\ v_i.0 <= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0) [ v_i.0 <= v_j.0 /\ v_i.0 > v_j.0 ]
We thus obtain the following problem:
2:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.1, nondef.0)
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.body_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.end_in() [ v_i.0 <= 0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.end_in() [ v_j.0 <= 0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 < v_j.0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 2 contains 1 nontrivial SCC:
3:	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.body_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 < v_j.0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]

By chaining the rule eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.body_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 ] with all rules in problem 3, the following new rules are obtained:
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]
We thus obtain the following problem:
4:	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 < v_j.0 ]
	eval_main_while.body_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]

The termination graph of problem 4 contains 1 nontrivial SCC:
5:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]

By chaining the rule eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 ] with all rules in problem 5, the following new rules are obtained:
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 < v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]
We thus obtain the following problem:
6:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 < v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]

The termination graph of problem 6 contains 1 nontrivial SCC:
7:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]

By chaining the rule eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 ] with all rules in problem 7, the following new rules are obtained:
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 >= v_j.0 ]
We thus obtain the following problem:
8:	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0 - 1) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 >= v_j.0 ]

The termination graph of problem 8 contains 1 nontrivial SCC:
9:	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ]

By chaining the rule eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 ] with all rules in problem 9, the following new rules are obtained:
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 > v_j.0 /\ v_i.0 >= v_i.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_i.0 - 1 < v_j.0 ]
We thus obtain the following problem:
10:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > v_j.0 /\ v_i.0 > 0 /\ v_i.0 >= v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 > v_j.0 /\ v_i.0 >= v_i.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_i.0 - 1 < v_j.0 ]

The termination graph of problem 10 contains 1 nontrivial SCC:
11:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ]
	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 > v_j.0 /\ v_i.0 >= v_i.0 ]

By chaining the rule eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_while.cond_in(v_i.0 - 1, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 ] with all rule in problem 11, the following new rules are obtained:
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 ]
We thus obtain the following problem:
12:	eval_main_while.cond_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_i.0, v_i.0) [ v_i.0 > 0 /\ v_j.0 > 0 /\ v_i.0 >= v_j.0 /\ v_i.0 > v_j.0 /\ v_i.0 >= v_i.0 ]
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 ]

The termination graph of problem 12 contains 1 nontrivial SCC:
13:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 ]

By chaining the rule eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 ] with all rule in problem 13, the following new rules are obtained:
	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 /\ v_j.0 <= v_j.0 /\ v_j.0 - 1 > 0 /\ v_j.0 - 1 < v_j.0 /\ v_j.0 >= v_j.0 - 1 /\ v_j.0 > v_j.0 - 1 ]
We thus obtain the following problem:
14:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 /\ v_j.0 <= v_j.0 /\ v_j.0 - 1 > 0 /\ v_j.0 - 1 < v_j.0 /\ v_j.0 >= v_j.0 - 1 /\ v_j.0 > v_j.0 - 1 ]

The termination graph of problem 14 contains 1 nontrivial SCC:
15:	eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 /\ v_j.0 <= v_j.0 /\ v_j.0 - 1 > 0 /\ v_j.0 - 1 < v_j.0 /\ v_j.0 >= v_j.0 - 1 /\ v_j.0 > v_j.0 - 1 ]

The following termination problem could not be handled:
eval_main_if.else_in(v_j.0, v_i.0) -> eval_main_if.else_in(v_j.0, v_j.0) [ v_i.0 <= v_j.0 /\ v_i.0 - 1 > 0 /\ v_j.0 > 0 /\ v_i.0 - 1 < v_j.0 /\ v_j.0 >= v_i.0 - 1 /\ v_j.0 > v_i.0 - 1 /\ v_j.0 >= v_j.0 /\ v_j.0 <= v_j.0 /\ v_j.0 - 1 > 0 /\ v_j.0 - 1 < v_j.0 /\ v_j.0 >= v_j.0 - 1 /\ v_j.0 > v_j.0 - 1 ]

Time: 1.599 sec (SMT: 1.484 sec)
