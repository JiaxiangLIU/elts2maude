Initial termination problem:
1:	eval_test_fun_start(v_N) -> eval_test_fun_entry_in(v_N)
	eval_test_fun_entry_in(v_N) -> eval_test_fun_for.cond_in(v_N, 0)
	eval_test_fun_for.cond_in(v_N, v_i.0) -> eval_test_fun_for.body_in(v_N, v_i.0) [ v_i.0 < v_N ]
	eval_test_fun_for.cond_in(v_N, v_i.0) -> eval_test_fun_for.end_in() [ v_i.0 >= v_N ]
	eval_test_fun_for.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.body_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.end_in(v_N, v_i.0)
	eval_test_fun_while.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.end_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.body.9_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_for.inc_in(v_N, v_i.0)
	eval_test_fun_while.body.9_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_for.inc_in(v_N, v_i.0) -> eval_test_fun_for.cond_in(v_N, v_i.0 + 1)
	eval_test_fun_for.end_in() -> eval_test_fun_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_test_fun_for.cond_in(v_N, v_i.0) -> eval_test_fun_for.body_in(v_N, v_i.0) [ v_i.0 < v_N ]
	eval_test_fun_for.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.body_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.end_in(v_N, v_i.0)
	eval_test_fun_while.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.end_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.body.9_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_for.inc_in(v_N, v_i.0)
	eval_test_fun_while.body.9_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_for.inc_in(v_N, v_i.0) -> eval_test_fun_for.cond_in(v_N, v_i.0 + 1)

A polynomial interpretation with
	Pol(eval_test_fun_for.cond_in) = 6*X_1 - 6*X_2
	Pol(eval_test_fun_for.body_in) = 6*X_1 - 6*X_2 - 1
	Pol(eval_test_fun_while.cond_in) = 6*X_1 - 6*X_2 - 2
	Pol(eval_test_fun_while.body_in) = 6*X_1 - 6*X_2 - 2
	Pol(eval_test_fun_while.end_in) = 6*X_1 - 6*X_2 - 3
	Pol(eval_test_fun_while.cond.5_in) = 6*X_1 - 6*X_2 - 4
	Pol(eval_test_fun_while.body.9_in) = 6*X_1 - 6*X_2 - 4
	Pol(eval_test_fun_for.inc_in) = 6*X_1 - 6*X_2 - 5
removes the following rule from problem 2:
	eval_test_fun_for.cond_in(v_N, v_i.0) -> eval_test_fun_for.body_in(v_N, v_i.0) [ v_i.0 < v_N ]
We thus obtain the following problem:
3:	eval_test_fun_for.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.body_in(v_N, v_i.0)
	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.end_in(v_N, v_i.0)
	eval_test_fun_while.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)
	eval_test_fun_while.end_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.body.9_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_for.inc_in(v_N, v_i.0)
	eval_test_fun_while.body.9_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_for.inc_in(v_N, v_i.0) -> eval_test_fun_for.cond_in(v_N, v_i.0 + 1)

The termination graph of problem 3 contains 2 nontrivial SCCs:
4:	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.body.9_in(v_N, v_i.0)
	eval_test_fun_while.body.9_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)

5:	eval_test_fun_while.cond_in(v_N, v_i.0) -> eval_test_fun_while.body_in(v_N, v_i.0)
	eval_test_fun_while.body_in(v_N, v_i.0) -> eval_test_fun_while.cond_in(v_N, v_i.0)

By chaining the rule eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.body.9_in(v_N, v_i.0) with all rule in problem 4, the following new rules are obtained:
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
We thus obtain the following problem:
6:	eval_test_fun_while.body.9_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)
	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)

The termination graph of problem 6 contains 1 nontrivial SCC:
7:	eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)

The following termination problem could not be handled:
eval_test_fun_while.cond.5_in(v_N, v_i.0) -> eval_test_fun_while.cond.5_in(v_N, v_i.0)

Time: 0.578 sec (SMT: 0.562 sec)
