Initial termination problem:
1:	eval_test_fun_start(v_x, v_y, v_z, v_flag) -> eval_test_fun_entry_in()
	eval_test_fun_entry_in() -> eval_test_fun_while.cond_in(nondef.0, nondef.1, nondef.3)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_land.rhs_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.end_in()
	eval_test_fun_land.rhs_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_land.rhs_in(v_10, v_11, v_13) -> eval_test_fun_while.end_in()
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.then_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.end_in() -> eval_test_fun_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_land.rhs_in(v_10, v_11, v_13)
	eval_test_fun_land.rhs_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.then_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_land.rhs_in(v_10, v_11, v_13) with all rule in problem 2, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
We thus obtain the following problem:
3:	eval_test_fun_land.rhs_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.then_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.then_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ] with all rule in problem 4, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
We thus obtain the following problem:
5:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.then_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) with all rules in problem 6, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
We thus obtain the following problem:
7:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 ] with all rules in problem 8, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
9:	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) [ v_18 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_18 <= 0 ]
	eval_test_fun_if.else_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) with all rule in problem 10, the following new rules are obtained:
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
We thus obtain the following problem:
11:	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)

The termination graph of problem 11 contains 1 nontrivial SCC:
12:	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)

By chaining the rule eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) with all rule in problem 12, the following new rules are obtained:
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
We thus obtain the following problem:
13:	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)

The termination graph of problem 13 contains 1 nontrivial SCC:
14:	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)

By chaining the rule eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) with all rule in problem 14, the following new rules are obtained:
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
We thus obtain the following problem:
15:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)

The termination graph of problem 15 contains 1 nontrivial SCC:
16:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) with all rules in problem 16, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
17:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 17 contains 1 nontrivial SCC:
18:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ] with all rule in problem 18, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
We thus obtain the following problem:
19:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]

The termination graph of problem 19 contains 1 nontrivial SCC:
20:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ] with all rule in problem 20, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
We thus obtain the following problem:
21:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]

The termination graph of problem 21 contains 1 nontrivial SCC:
22:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ] with all rule in problem 22, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
We thus obtain the following problem:
23:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]

The termination graph of problem 23 contains 1 nontrivial SCC:
24:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ] with all rule in problem 24, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
We thus obtain the following problem:
25:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]

The termination graph of problem 25 contains 1 nontrivial SCC:
26:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ] with all rule in problem 26, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
We thus obtain the following problem:
27:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]

The termination graph of problem 27 contains 1 nontrivial SCC:
28:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ] with all rule in problem 28, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
We thus obtain the following problem:
29:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]

The termination graph of problem 29 contains 1 nontrivial SCC:
30:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]

By chaining the rule eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ] with all rule in problem 30, the following new rules are obtained:
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
31:	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 31 contains 1 nontrivial SCC:
32:	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) with all rules in problem 32, the following new rules are obtained:
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
33:	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 33 contains 1 nontrivial SCC:
34:	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13)
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]

By chaining the rule eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) with all rules in problem 34, the following new rules are obtained:
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
35:	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 35 contains 1 nontrivial SCC:
36:	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13)
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) with all rules in problem 36, the following new rules are obtained:
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
37:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 37 contains 1 nontrivial SCC:
38:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ] with all rules in problem 38, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
39:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]

The termination graph of problem 39 contains 1 nontrivial SCC:
40:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ] with all rules in problem 40, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
We thus obtain the following problem:
41:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]

The termination graph of problem 41 contains 1 nontrivial SCC:
42:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ] with all rules in problem 42, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
43:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 43 contains 1 nontrivial SCC:
44:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ] with all rules in problem 44, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
We thus obtain the following problem:
45:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]

The termination graph of problem 45 contains 1 nontrivial SCC:
46:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ] with all rules in problem 46, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
We thus obtain the following problem:
47:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]

The termination graph of problem 47 contains 1 nontrivial SCC:
48:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ] with all rules in problem 48, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
We thus obtain the following problem:
49:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]

The termination graph of problem 49 contains 1 nontrivial SCC:
50:	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]

By chaining the rule eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ] with all rules in problem 50, the following new rules are obtained:
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]
We thus obtain the following problem:
51:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]

The termination graph of problem 51 contains 1 nontrivial SCC:
52:	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
	eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
	eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
	eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]

The following termination problem could not be handled:
eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
eval_test_fun_while.body_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_if.then.7_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8) [ v_11 > 1 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ nondef.8 <= 0 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_13 >= -1 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ nondef.8 <= 0 ]
eval_test_fun_if.else.9_in(v_10, v_11, v_13, v_18) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8) [ v_11 <= 1 /\ v_13 >= -1 ]
eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 > 0 /\ v_13 < -1 ]
eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ nondef.8 <= 0 ]
eval_test_fun_if.end.10_in(v_10, v_11, v_13, v_18) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.body_in(v_10, v_11, v_13) [ v_11 > 1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_while.cond_in(v_10, v_11, v_13) [ v_11 > 1 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 > 1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' > 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 > 0 /\ v_13 < -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 > 1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' > 0 /\ v_13 < -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ nondef.8 <= 0 /\ v_11 <= 1 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.end.10_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 > 1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_13 >= -1 /\ v_11 <= 1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' > 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 > 0 /\ v_13 < -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.then.7_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' > 0 /\ v_13 < -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ nondef.8 <= 0 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 /\ nondef.8' <= 0 ]
eval_test_fun_while.cond_in(v_10, v_11, v_13) -> eval_test_fun_if.else.9_in(v_10, v_11, v_13, nondef.8') [ v_11 <= 1 /\ v_13 >= -1 ]

Time: 16.688 sec (SMT: 15.554 sec)
