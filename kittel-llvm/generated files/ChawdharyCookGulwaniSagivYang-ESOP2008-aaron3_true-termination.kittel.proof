Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.2, nondef.1, nondef.0, nondef.3)
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.end_in() [ v_x.0 < v_y.0 ]
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.end_in() [ v_x.0 > v_tx.0 + v_z.0 ]
	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0 - 1, v_y.0, nondef.5, v_x.0)
	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0 - 1, v_y.0, nondef.5, v_x.0)
	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)

By chaining the rule eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ] with all rules in problem 2, the following new rules are obtained:
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
We thus obtain the following problem:
3:	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_while.body_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0)
	eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0 - 1, v_y.0, nondef.5, v_x.0)
	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0 - 1, v_y.0, nondef.5, v_x.0)
	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]

A polynomial interpretation with
	Pol(eval_main_if.then_in) = -4*X_2 + 4*X_3 + 2*X_1^2
	Pol(eval_main_while.cond_in) = 4*X_1 - 4*X_2 + 4*X_4 + 2*X_1^2 + 1
	Pol(eval_main_if.else_in) = 4*X_1 - 4*X_2 + 4*X_4 + 2*X_1^2 + 1
removes the following rule from problem 4:
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
We thus obtain the following problem:
5:	eval_main_if.then_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0 - 1, v_y.0, nondef.5, v_x.0)
	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]

A polynomial interpretation with
	Pol(eval_main_if.else_in) = -2*X_2 + 2*X_3
	Pol(eval_main_while.cond_in) = -2*X_2 + 2*X_3 + 1
removes the following rule from problem 6:
	eval_main_while.cond_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) [ v_x.0 >= v_y.0 /\ v_x.0 <= v_tx.0 + v_z.0 ]
We thus obtain the following problem:
7:	eval_main_if.else_in(v_z.0, v_y.0, v_x.0, v_tx.0) -> eval_main_while.cond_in(v_z.0, v_y.0 + 1, v_x.0, v_tx.0)

The termination graph of problem 7 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.930 sec (SMT: 0.631 sec)
