Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.2, nondef.1, nondef.0)
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.end_in() [ v_x.0 <= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.end_in() [ v_y.0 > -v_oldy.0 ]
	eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0)
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ]
	eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0)

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ] with all rule in problem 2, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ]
We thus obtain the following problem:
3:	eval_main_while.body_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0)
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ]

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3, v_y.0, v_y.0) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 ] with all rule in problem 4, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3', nondef.3, nondef.3) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 /\ v_y.0 > 0 /\ nondef.3 <= -v_y.0 ]
We thus obtain the following problem:
5:	eval_main_while.cond_in(v_y.0, v_x.0, v_oldy.0) -> eval_main_while.cond_in(nondef.3', nondef.3, nondef.3) [ v_x.0 > 0 /\ v_y.0 <= -v_oldy.0 /\ v_y.0 > 0 /\ nondef.3 <= -v_y.0 ]

The termination graph of problem 5 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.372 sec (SMT: 0.353 sec)
