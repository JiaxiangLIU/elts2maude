Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0, 1)
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.body_in(v_x.0, v_c.0) [ v_c.0 > 0 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.end_in() [ v_c.0 <= 0 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_x.0 > 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 + 1) [ v_x.0 > 100 /\ v_x.0 <= 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 - 1) [ v_x.0 <= 100 /\ v_x.0 > 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_x.0 <= 100 ]
	eval_main_while.end_in() -> eval_main_stop()

Testing for unsatisfiable constraints removes the following rules from problem 1:
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 + 1) [ v_x.0 > 100 /\ v_x.0 <= 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 - 1) [ v_x.0 <= 100 /\ v_x.0 > 100 ]
We thus obtain the following problem:
2:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0, 1)
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.body_in(v_x.0, v_c.0) [ v_c.0 > 0 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.end_in() [ v_c.0 <= 0 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_x.0 > 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_x.0 <= 100 ]
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 2 contains 1 nontrivial SCC:
3:	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.body_in(v_x.0, v_c.0) [ v_c.0 > 0 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_x.0 > 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_x.0 <= 100 ]

By chaining the rule eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.body_in(v_x.0, v_c.0) [ v_c.0 > 0 ] with all rules in problem 3, the following new rules are obtained:
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_c.0 > 0 /\ v_x.0 > 100 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_c.0 > 0 /\ v_x.0 <= 100 ]
We thus obtain the following problem:
4:	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_x.0 > 100 ]
	eval_main_while.body_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_x.0 <= 100 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_c.0 > 0 /\ v_x.0 > 100 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_c.0 > 0 /\ v_x.0 <= 100 ]

The termination graph of problem 4 contains 1 nontrivial SCC:
5:	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_c.0 > 0 /\ v_x.0 > 100 ]
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_c.0 > 0 /\ v_x.0 <= 100 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -2*X_1 + 21*X_2 + 179
removes the following rule from problem 5:
	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 + 11, v_c.0 + 1) [ v_c.0 > 0 /\ v_x.0 <= 100 ]
We thus obtain the following problem:
6:	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_c.0 > 0 /\ v_x.0 > 100 ]

The termination graph of problem 6 contains 1 nontrivial SCC:
7:	eval_main_while.cond_in(v_x.0, v_c.0) -> eval_main_while.cond_in(v_x.0 - 10, v_c.0 - 1) [ v_c.0 > 0 /\ v_x.0 > 100 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_1
removes all rules from problem 7.

Termination successfully shown!

Time: 0.573 sec (SMT: 0.558 sec)
