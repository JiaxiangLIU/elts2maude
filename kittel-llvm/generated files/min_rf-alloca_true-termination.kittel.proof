Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_land.rhs_in()
	eval_main_while.cond_in() -> eval_main_while.end_in()
	eval_main_land.rhs_in() -> eval_main_while.body_in()
	eval_main_land.rhs_in() -> eval_main_while.end_in()
	eval_main_while.body_in() -> eval_main_if.then_in()
	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.then_in() -> eval_main_if.end_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in() -> eval_main_land.rhs_in()
	eval_main_land.rhs_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.then_in()
	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.then_in() -> eval_main_if.end_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()

By chaining the rule eval_main_while.cond_in() -> eval_main_land.rhs_in() with all rule in problem 2, the following new rules are obtained:
	eval_main_while.cond_in() -> eval_main_while.body_in()
We thus obtain the following problem:
3:	eval_main_land.rhs_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.then_in()
	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.then_in() -> eval_main_if.end_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.body_in() -> eval_main_if.then_in()
	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.then_in() -> eval_main_if.end_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()

By chaining the rule eval_main_while.body_in() -> eval_main_if.then_in() with all rule in problem 4, the following new rules are obtained:
	eval_main_while.body_in() -> eval_main_if.end_in()
We thus obtain the following problem:
5:	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.then_in() -> eval_main_if.end_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_while.body_in() -> eval_main_if.else_in()
	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()

By chaining the rule eval_main_while.body_in() -> eval_main_if.else_in() with all rule in problem 6, the following new rules are obtained:
	eval_main_while.body_in() -> eval_main_if.end_in()
We thus obtain the following problem:
7:	eval_main_if.else_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_main_if.end_in() -> eval_main_if.then.5_in()
	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()

By chaining the rule eval_main_if.end_in() -> eval_main_if.then.5_in() with all rule in problem 8, the following new rules are obtained:
	eval_main_if.end_in() -> eval_main_while.cond_in()
We thus obtain the following problem:
9:	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.then.5_in() -> eval_main_while.cond_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_main_if.end_in() -> eval_main_if.else.7_in()
	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()

By chaining the rule eval_main_if.end_in() -> eval_main_if.else.7_in() with all rule in problem 10, the following new rules are obtained:
	eval_main_if.end_in() -> eval_main_while.cond_in()
We thus obtain the following problem:
11:	eval_main_if.else.7_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()

The termination graph of problem 11 contains 1 nontrivial SCC:
12:	eval_main_while.cond_in() -> eval_main_while.body_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()

By chaining the rule eval_main_while.cond_in() -> eval_main_while.body_in() with all rules in problem 12, the following new rules are obtained:
	eval_main_while.cond_in() -> eval_main_if.end_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()
We thus obtain the following problem:
13:	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_while.body_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()

The termination graph of problem 13 contains 1 nontrivial SCC:
14:	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_if.end_in() -> eval_main_while.cond_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()

By chaining the rule eval_main_if.end_in() -> eval_main_while.cond_in() with all rules in problem 14, the following new rules are obtained:
	eval_main_if.end_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.end_in()
We thus obtain the following problem:
15:	eval_main_while.cond_in() -> eval_main_if.end_in()
	eval_main_while.cond_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.end_in()

The termination graph of problem 15 contains 1 nontrivial SCC:
16:	eval_main_if.end_in() -> eval_main_if.end_in()
	eval_main_if.end_in() -> eval_main_if.end_in()

The following termination problem could not be handled:
eval_main_if.end_in() -> eval_main_if.end_in()
eval_main_if.end_in() -> eval_main_if.end_in()

Time: 1.268 sec (SMT: 1.229 sec)
