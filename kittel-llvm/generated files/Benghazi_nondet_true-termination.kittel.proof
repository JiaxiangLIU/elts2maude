Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.2, nondef.1, nondef.0)
	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) [ v_x.0 >= 0 ]
	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.end_in() [ v_x.0 < 0 ]
	eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0)
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) [ v_x.0 >= 0 ]
	eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0)

By chaining the rule eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) [ v_x.0 >= 0 ] with all rule in problem 2, the following new rules are obtained:
	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0) [ v_x.0 >= 0 ]
We thus obtain the following problem:
3:	eval_main_while.body_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0)
	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0) [ v_x.0 >= 0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0) [ v_x.0 >= 0 ]

By chaining the rule eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d1.0 + 1, v_d2.0 + 1, v_x.0 - v_d1.0) [ v_x.0 >= 0 ] with all rule in problem 4, the following new rules are obtained:
	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d2.0 + 2, v_d1.0 + 2, v_x.0 - v_d1.0 - v_d2.0 - 1) [ v_x.0 >= 0 /\ v_x.0 - v_d1.0 >= 0 ]
We thus obtain the following problem:
5:	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d2.0 + 2, v_d1.0 + 2, v_x.0 - v_d1.0 - v_d2.0 - 1) [ v_x.0 >= 0 /\ v_x.0 - v_d1.0 >= 0 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_while.cond_in(v_d2.0, v_d1.0, v_x.0) -> eval_main_while.cond_in(v_d2.0 + 2, v_d1.0 + 2, v_x.0 - v_d1.0 - v_d2.0 - 1) [ v_x.0 >= 0 /\ v_x.0 - v_d1.0 >= 0 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -4*X_2 + 4*X_3 + X_1^2 + X_2^2
removes all rules from problem 6.

Termination successfully shown!

Time: 0.350 sec (SMT: 0.331 sec)
