Initial termination problem:
1:	eval_loop_start(v_a, v_b) -> eval_loop_entry_in(v_a, v_b)
	eval_loop_entry_in(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]
	eval_loop_entry_in(v_a, v_b) -> eval_loop_if.end_in() [ v_a <= 0 ]
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_start(v_a + v_b, v_b - 1)
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_if.end_in()
	eval_loop_if.end_in() -> eval_loop_stop()
	eval_random_start() -> eval_random_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_loop_start(v_a, v_b) -> eval_loop_entry_in(v_a, v_b)
	eval_loop_entry_in(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_start(v_a + v_b, v_b - 1)

By chaining the rule eval_loop_start(v_a, v_b) -> eval_loop_entry_in(v_a, v_b) with all rule in problem 2, the following new rules are obtained:
	eval_loop_start(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]
We thus obtain the following problem:
3:	eval_loop_entry_in(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_start(v_a + v_b, v_b - 1)
	eval_loop_start(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_loop_if.then_in(v_a, v_b) -> eval_loop_start(v_a + v_b, v_b - 1)
	eval_loop_start(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]

By chaining the rule eval_loop_if.then_in(v_a, v_b) -> eval_loop_start(v_a + v_b, v_b - 1) with all rule in problem 4, the following new rules are obtained:
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_if.then_in(v_a + v_b, v_b - 1) [ v_a + v_b > 0 ]
We thus obtain the following problem:
5:	eval_loop_start(v_a, v_b) -> eval_loop_if.then_in(v_a, v_b) [ v_a > 0 ]
	eval_loop_if.then_in(v_a, v_b) -> eval_loop_if.then_in(v_a + v_b, v_b - 1) [ v_a + v_b > 0 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_loop_if.then_in(v_a, v_b) -> eval_loop_if.then_in(v_a + v_b, v_b - 1) [ v_a + v_b > 0 ]

A polynomial interpretation with
	Pol(eval_loop_if.then_in) = 2*X_1 + 2*X_2 + X_2^2
removes all rules from problem 6.

Termination successfully shown!

Time: 0.388 sec (SMT: 0.370 sec)
