Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.1, nondef.0)
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 < 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_y.0 = 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_x.0 < 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_y.0 < 0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_x.0 = v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) [ v_xtmp.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond_in(v_xtmp.0, v_y.0) [ v_xtmp.0 <= v_y.0 ]
	eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0 - v_y.0)
	eval_main_while.end.9_in() -> eval_main_stop()

Testing for unsatisfiable constraints removes the following rule from problem 1:
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 < 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ]
We thus obtain the following problem:
2:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.1, nondef.0)
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_y.0 = 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_x.0 < 0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.end.9_in() [ v_y.0 < 0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_x.0 = v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) [ v_xtmp.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond_in(v_xtmp.0, v_y.0) [ v_xtmp.0 <= v_y.0 ]
	eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0 - v_y.0)
	eval_main_while.end.9_in() -> eval_main_stop()

The termination graph of problem 2 contains 1 nontrivial SCC:
3:	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_x.0 = v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) [ v_xtmp.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond_in(v_xtmp.0, v_y.0) [ v_xtmp.0 <= v_y.0 ]
	eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0 - v_y.0)

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.body_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 ] with all rules in problem 3, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 < v_y.0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 > v_y.0 ]
We thus obtain the following problem:
4:	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_x.0 = v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_x.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) [ v_xtmp.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond_in(v_xtmp.0, v_y.0) [ v_xtmp.0 <= v_y.0 ]
	eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0 - v_y.0)
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 < v_y.0 ]
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 > v_y.0 ]

The termination graph of problem 4 contains 2 nontrivial SCCs:
5:	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 ]

6:	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) [ v_xtmp.0 > v_y.0 ]
	eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond_in(v_xtmp.0, v_y.0) [ v_xtmp.0 <= v_y.0 ]
	eval_main_while.body.8_in(v_y.0, v_x.0, v_xtmp.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_xtmp.0 - v_y.0)
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond.6_in(v_y.0, v_x.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 > v_y.0 ]

By chaining the rule eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_x.0, v_y.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 ] with all rule in problem 5, the following new rules are obtained:
	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 /\ v_x.0 > 0 /\ v_y.0 = v_x.0 ]
We thus obtain the following problem:
7:	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 /\ v_x.0 > 0 /\ v_y.0 = v_x.0 ]

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 /\ v_x.0 > 0 /\ v_y.0 = v_x.0 ]

The following termination problem could not be handled:
eval_main_while.cond_in(v_y.0, v_x.0) -> eval_main_while.cond_in(v_y.0, v_x.0) [ v_y.0 > 0 /\ v_x.0 >= 0 /\ v_y.0 >= 0 /\ v_x.0 = v_y.0 /\ v_x.0 > 0 /\ v_y.0 = v_x.0 ]

Time: 1.062 sec (SMT: 1.004 sec)
