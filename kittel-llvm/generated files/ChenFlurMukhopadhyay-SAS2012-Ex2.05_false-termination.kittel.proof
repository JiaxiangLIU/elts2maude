Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0, nondef.1)
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.end_in() [ v_x.0 >= v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > v_y.0 ]
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > v_y.0 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -2*X_2 + 3*X_2^2 - 2
	Pol(eval_main_while.body_in) = -2*X_2 + 3*X_2^2 - 2
removes the following rule from problem 2:
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > v_y.0 ]
We thus obtain the following problem:
3:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < v_y.0 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < v_y.0 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_2 - 1
	Pol(eval_main_while.body_in) = X_2 - 1
removes the following rule from problem 4:
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, nondef.2) [ v_y.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < v_y.0 ]
We thus obtain the following problem:
5:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ]
	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]

By chaining the rule eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.body_in(v_x.0, v_y.0) [ v_x.0 < v_y.0 ] with all rule in problem 6, the following new rules are obtained:
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 ]
We thus obtain the following problem:
7:	eval_main_while.body_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_y.0 = 0 ]
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 ]

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 ]

By chaining the rule eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 ] with all rule in problem 8, the following new rules are obtained:
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 /\ v_x.0 + v_y.0 < 0 /\ 0 = 0 ]
We thus obtain the following problem:
9:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 /\ v_x.0 + v_y.0 < 0 /\ 0 = 0 ]

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 /\ v_x.0 + v_y.0 < 0 /\ 0 = 0 ]

The following termination problem could not be handled:
eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond_in(v_x.0 + v_y.0, 0) [ v_x.0 < v_y.0 /\ v_y.0 = 0 /\ v_x.0 + v_y.0 < 0 /\ 0 = 0 ]

Time: 0.575 sec (SMT: 0.526 sec)
