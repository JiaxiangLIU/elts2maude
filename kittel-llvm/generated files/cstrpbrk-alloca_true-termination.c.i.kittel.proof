Initial termination problem:
1:	eval_cstrpbrk_start() -> eval_cstrpbrk_entry_in()
	eval_cstrpbrk_entry_in() -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_for.body_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_return_in()
	eval_cstrpbrk_for.body_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_return_in()
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_return_in() -> eval_cstrpbrk_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_for.body_in()
	eval_cstrpbrk_for.body_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()

By chaining the rule eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_for.body_in() with all rule in problem 2, the following new rules are obtained:
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
We thus obtain the following problem:
3:	eval_cstrpbrk_for.body_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)

By chaining the rule eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) with all rules in problem 4, the following new rules are obtained:
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
We thus obtain the following problem:
5:	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_land.rhs_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)

The termination graph of problem 5 contains 1 nontrivial SCC:
6:	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8)

By chaining the rule eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.end_in(v_conv2, v_conv8) with all rule in problem 6, the following new rules are obtained:
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
We thus obtain the following problem:
7:	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.end_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)

The termination graph of problem 7 contains 1 nontrivial SCC:
8:	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)

By chaining the rule eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) with all rules in problem 8, the following new rules are obtained:
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
We thus obtain the following problem:
9:	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)

The termination graph of problem 9 contains 1 nontrivial SCC:
10:	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in()
	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)

By chaining the rule eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.cond_in() with all rule in problem 10, the following new rules are obtained:
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
We thus obtain the following problem:
11:	eval_cstrpbrk_for.cond_in() -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)

The termination graph of problem 11 contains 1 nontrivial SCC:
12:	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
	eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
	eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)

The following termination problem could not be handled:
eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
eval_cstrpbrk_while.cond_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.body_in(v_conv2, v_conv8)
eval_cstrpbrk_while.body_in(v_conv2, v_conv8) -> eval_cstrpbrk_for.inc_in(v_conv2, v_conv8)
eval_cstrpbrk_for.inc_in(v_conv2, v_conv8) -> eval_cstrpbrk_while.cond_in(nondef.1, nondef.1)

Time: 1.025 sec (SMT: 0.984 sec)
