Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.2, nondef.1, nondef.0)
	eval_main_while.cond_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.body_in(v_k.0, v_j.0, v_i.0) [ v_i.0 <= 100 /\ v_j.0 <= v_k.0 ]
	eval_main_while.cond_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.end_in() [ v_i.0 > 100 ]
	eval_main_while.cond_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.end_in() [ v_j.0 > v_k.0 ]
	eval_main_while.body_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.cond_in(v_k.0 - 1, v_i.0 + 1, v_j.0)
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.body_in(v_k.0, v_j.0, v_i.0) [ v_i.0 <= 100 /\ v_j.0 <= v_k.0 ]
	eval_main_while.body_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.cond_in(v_k.0 - 1, v_i.0 + 1, v_j.0)

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_1 - X_2 - X_3 + 100
	Pol(eval_main_while.body_in) = X_1 - X_2 - X_3 + 99
removes the following rule from problem 2:
	eval_main_while.cond_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.body_in(v_k.0, v_j.0, v_i.0) [ v_i.0 <= 100 /\ v_j.0 <= v_k.0 ]
We thus obtain the following problem:
3:	eval_main_while.body_in(v_k.0, v_j.0, v_i.0) -> eval_main_while.cond_in(v_k.0 - 1, v_i.0 + 1, v_j.0)

The termination graph of problem 3 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.241 sec (SMT: 0.236 sec)
