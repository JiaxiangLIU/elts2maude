Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0, nondef.1)
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 1) [ v_x.0 >= 0 /\ v_y.0 > 0 ]
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.end.9_in() [ v_x.0 < 0 ]
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.end.9_in() [ v_y.0 <= 0 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) [ v_x.0 > v_y.1 /\ v_y.1 > 0 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_x.0 <= v_y.1 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_y.1 <= 0 ]
	eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 2*v_y.1)
	eval_main_while.end_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond_in(v_x.0 - 1, v_y.1)
	eval_main_while.end.9_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 1) [ v_x.0 >= 0 /\ v_y.0 > 0 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) [ v_x.0 > v_y.1 /\ v_y.1 > 0 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_x.0 <= v_y.1 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_y.1 <= 0 ]
	eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 2*v_y.1)
	eval_main_while.end_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond_in(v_x.0 - 1, v_y.1)

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = 3*X_1 + 1
	Pol(eval_main_while.cond.3_in) = 3*X_1
	Pol(eval_main_while.body.8_in) = 3*X_1
	Pol(eval_main_while.end_in) = 3*X_1 - 1
removes the following rule from problem 2:
	eval_main_while.cond_in(v_x.0, v_y.0) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 1) [ v_x.0 >= 0 /\ v_y.0 > 0 ]
We thus obtain the following problem:
3:	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) [ v_x.0 > v_y.1 /\ v_y.1 > 0 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_x.0 <= v_y.1 ]
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.end_in(v_x.0, v_y.0, v_y.1) [ v_y.1 <= 0 ]
	eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 2*v_y.1)
	eval_main_while.end_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond_in(v_x.0 - 1, v_y.1)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) [ v_x.0 > v_y.1 /\ v_y.1 > 0 ]
	eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 2*v_y.1)

A polynomial interpretation with
	Pol(eval_main_while.cond.3_in) = 2*X_1 - 2*X_3 - 1
	Pol(eval_main_while.body.8_in) = 2*X_1 - 4*X_3
removes the following rule from problem 4:
	eval_main_while.cond.3_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) [ v_x.0 > v_y.1 /\ v_y.1 > 0 ]
We thus obtain the following problem:
5:	eval_main_while.body.8_in(v_x.0, v_y.0, v_y.1) -> eval_main_while.cond.3_in(v_x.0, v_y.0, 2*v_y.1)

The termination graph of problem 5 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.423 sec (SMT: 0.414 sec)
