Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0)
	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 > 0 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.end_in() [ v_i.0 <= 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 < 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 = 5 ]
	eval_main_while.end_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 > 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 < 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 = 5 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_1 - 3
	Pol(eval_main_while.body_in) = X_1 - 3
removes the following rule from problem 2:
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 5 ]
We thus obtain the following problem:
3:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 > 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 < 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 = 5 ]

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 > 0 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 < 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 = 5 ]

By chaining the rule eval_main_while.cond_in(v_i.0) -> eval_main_while.body_in(v_i.0) [ v_i.0 > 0 ] with all rules in problem 4, the following new rules are obtained:
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 < 5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 = 5 ]
We thus obtain the following problem:
5:	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 < 5 ]
	eval_main_while.body_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 = 5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 < 5 ]
	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 = 5 ]

The termination graph of problem 5 contains 2 nontrivial SCCs:
6:	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0 - 1) [ v_i.0 > 0 /\ v_i.0 < 5 ]

7:	eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 = 5 ]

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = X_1
removes all rules from problem 6.

The following termination problem could not be handled:
eval_main_while.cond_in(v_i.0) -> eval_main_while.cond_in(v_i.0) [ v_i.0 > 0 /\ v_i.0 = 5 ]

Time: 0.535 sec (SMT: 0.518 sec)
