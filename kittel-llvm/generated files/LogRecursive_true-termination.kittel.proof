Initial termination problem:
1:	eval_log_start(v_x, v_y) -> eval_log_entry_in(v_x, v_y)
	eval_log_entry_in(v_x, v_y) -> eval_log_if.then_in(v_x, v_y) [ v_x >= v_y /\ v_y > 1 ]
	eval_log_entry_in(v_x, v_y) -> eval_log_return_in() [ v_x < v_y ]
	eval_log_entry_in(v_x, v_y) -> eval_log_return_in() [ v_y <= 1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(0, v_y) [ v_x = 0 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(v_x, v_y) [ v_y = 1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(-v_x, v_y) [ v_y = -1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y > 1 /\ v_x > 0 /\ nondef.0 >= 0 /\ nondef.0 < v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y > 1 /\ v_x < 0 /\ nondef.0 <= 0 /\ nondef.0 > v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y < -1 /\ v_x > 0 /\ nondef.0 <= 0 /\ nondef.0 > -v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y < -1 /\ v_x < 0 /\ nondef.0 >= 0 /\ nondef.0 < -v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_x = 0 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y = 1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y = -1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y > 1 /\ v_x > 0 /\ nondef.0 >= 0 /\ nondef.0 < v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y > 1 /\ v_x < 0 /\ nondef.0 <= 0 /\ nondef.0 > v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y < -1 /\ v_x > 0 /\ nondef.0 <= 0 /\ nondef.0 > -v_x ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_return_in() [ v_y < -1 /\ v_x < 0 /\ nondef.0 >= 0 /\ nondef.0 < -v_x ]
	eval_log_return_in() -> eval_log_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_log_start(v_x, v_y) -> eval_log_entry_in(v_x, v_y)
	eval_log_entry_in(v_x, v_y) -> eval_log_if.then_in(v_x, v_y) [ v_x >= v_y /\ v_y > 1 ]
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y > 1 /\ v_x > 0 /\ nondef.0 >= 0 /\ nondef.0 < v_x ]

A polynomial interpretation with
	Pol(eval_log_start) = 3*X_1 + X_2 - 7
	Pol(eval_log_entry_in) = 3*X_1 + X_2 - 8
	Pol(eval_log_if.then_in) = 3*X_1 + X_2 - 9
removes the following rule from problem 2:
	eval_log_entry_in(v_x, v_y) -> eval_log_if.then_in(v_x, v_y) [ v_x >= v_y /\ v_y > 1 ]
We thus obtain the following problem:
3:	eval_log_start(v_x, v_y) -> eval_log_entry_in(v_x, v_y)
	eval_log_if.then_in(v_x, v_y) -> eval_log_start(nondef.0, v_y) [ v_y > 1 /\ v_x > 0 /\ nondef.0 >= 0 /\ nondef.0 < v_x ]

The termination graph of problem 3 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.737 sec (SMT: 0.725 sec)
