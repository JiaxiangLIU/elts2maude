Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(nondef.0)
	eval_main_while.cond_in(v_x1.0) -> eval_main_while.cond.2_in(v_x1.0, 10) [ v_x1.0 <= 10 ]
	eval_main_while.cond_in(v_x1.0) -> eval_main_while.end.5_in() [ v_x1.0 > 10 ]
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.body.4_in(v_x1.0, v_x2.0) [ v_x2.0 > 1 ]
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.end_in(v_x1.0, v_x2.0) [ v_x2.0 <= 1 ]
	eval_main_while.body.4_in(v_x1.0, v_x2.0) -> eval_main_while.cond.2_in(v_x1.0, v_x2.0 - 1)
	eval_main_while.end_in(v_x1.0, v_x2.0) -> eval_main_while.cond_in(v_x1.0 + 1)
	eval_main_while.end.5_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_x1.0) -> eval_main_while.cond.2_in(v_x1.0, 10) [ v_x1.0 <= 10 ]
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.body.4_in(v_x1.0, v_x2.0) [ v_x2.0 > 1 ]
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.end_in(v_x1.0, v_x2.0) [ v_x2.0 <= 1 ]
	eval_main_while.body.4_in(v_x1.0, v_x2.0) -> eval_main_while.cond.2_in(v_x1.0, v_x2.0 - 1)
	eval_main_while.end_in(v_x1.0, v_x2.0) -> eval_main_while.cond_in(v_x1.0 + 1)

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -X_1 + 10
	Pol(eval_main_while.cond.2_in) = -X_1 + 9
	Pol(eval_main_while.body.4_in) = -X_1 + 9
	Pol(eval_main_while.end_in) = -X_1 + 9
removes the following rule from problem 2:
	eval_main_while.cond_in(v_x1.0) -> eval_main_while.cond.2_in(v_x1.0, 10) [ v_x1.0 <= 10 ]
We thus obtain the following problem:
3:	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.body.4_in(v_x1.0, v_x2.0) [ v_x2.0 > 1 ]
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.end_in(v_x1.0, v_x2.0) [ v_x2.0 <= 1 ]
	eval_main_while.body.4_in(v_x1.0, v_x2.0) -> eval_main_while.cond.2_in(v_x1.0, v_x2.0 - 1)
	eval_main_while.end_in(v_x1.0, v_x2.0) -> eval_main_while.cond_in(v_x1.0 + 1)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.body.4_in(v_x1.0, v_x2.0) [ v_x2.0 > 1 ]
	eval_main_while.body.4_in(v_x1.0, v_x2.0) -> eval_main_while.cond.2_in(v_x1.0, v_x2.0 - 1)

A polynomial interpretation with
	Pol(eval_main_while.cond.2_in) = 2*X_2
	Pol(eval_main_while.body.4_in) = 2*X_2 - 1
removes the following rule from problem 4:
	eval_main_while.cond.2_in(v_x1.0, v_x2.0) -> eval_main_while.body.4_in(v_x1.0, v_x2.0) [ v_x2.0 > 1 ]
We thus obtain the following problem:
5:	eval_main_while.body.4_in(v_x1.0, v_x2.0) -> eval_main_while.cond.2_in(v_x1.0, v_x2.0 - 1)

The termination graph of problem 5 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.305 sec (SMT: 0.299 sec)
