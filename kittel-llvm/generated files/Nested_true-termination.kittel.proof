Initial termination problem:
1:	eval_main_start() -> eval_main_entry_in()
	eval_main_entry_in() -> eval_main_while.cond_in(0, 3)
	eval_main_while.cond_in(v_i.0, v_j.0) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.0) [ v_i.0 < 10 ]
	eval_main_while.cond_in(v_i.0, v_j.0) -> eval_main_while.end.5_in() [ v_i.0 >= 10 ]
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) [ v_j.1 < 12 ]
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.end_in(v_i.0, v_j.0, v_j.1) [ v_j.1 >= 12 ]
	eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1 + 1)
	eval_main_while.end_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond_in(v_i.0 + 1, v_j.1)
	eval_main_while.end.5_in() -> eval_main_stop()

The termination graph of problem 1 contains 1 nontrivial SCC:
2:	eval_main_while.cond_in(v_i.0, v_j.0) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.0) [ v_i.0 < 10 ]
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) [ v_j.1 < 12 ]
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.end_in(v_i.0, v_j.0, v_j.1) [ v_j.1 >= 12 ]
	eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1 + 1)
	eval_main_while.end_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond_in(v_i.0 + 1, v_j.1)

A polynomial interpretation with
	Pol(eval_main_while.cond_in) = -X_1 + 9
	Pol(eval_main_while.cond.1_in) = -X_1 + 8
	Pol(eval_main_while.body.3_in) = -X_1 + 8
	Pol(eval_main_while.end_in) = -X_1 + 8
removes the following rule from problem 2:
	eval_main_while.cond_in(v_i.0, v_j.0) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.0) [ v_i.0 < 10 ]
We thus obtain the following problem:
3:	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) [ v_j.1 < 12 ]
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.end_in(v_i.0, v_j.0, v_j.1) [ v_j.1 >= 12 ]
	eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1 + 1)
	eval_main_while.end_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond_in(v_i.0 + 1, v_j.1)

The termination graph of problem 3 contains 1 nontrivial SCC:
4:	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) [ v_j.1 < 12 ]
	eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1 + 1)

A polynomial interpretation with
	Pol(eval_main_while.cond.1_in) = -2*X_3 + 22
	Pol(eval_main_while.body.3_in) = -2*X_3 + 21
removes the following rule from problem 4:
	eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) [ v_j.1 < 12 ]
We thus obtain the following problem:
5:	eval_main_while.body.3_in(v_i.0, v_j.0, v_j.1) -> eval_main_while.cond.1_in(v_i.0, v_j.0, v_j.1 + 1)

The termination graph of problem 5 contains no nontrivial SCC.

Termination successfully shown!

Time: 0.308 sec (SMT: 0.302 sec)
