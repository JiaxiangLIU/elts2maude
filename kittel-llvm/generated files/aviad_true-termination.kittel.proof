Initial termination problem:
1:	eval_f_start(v_a) -> eval_f_entry_in(v_a)
	eval_f_entry_in(v_a) -> eval_f_while.cond_in(v_a)
	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.body_in(v_a.addr.0) [ v_a.addr.0 > 1 ]
	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.end_in() [ v_a.addr.0 <= 1 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.end_in() -> eval_f_stop()
	eval_main_start() -> eval_main_stop()

Testing for unsatisfiable constraints removes the following rules from problem 1:
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 = 0 /\ nondef.0 = 0 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ v_a.addr.0 < 0 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 = 0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ v_a.addr.0 > 0 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 > 0 ]
We thus obtain the following problem:
2:	eval_f_start(v_a) -> eval_f_entry_in(v_a)
	eval_f_entry_in(v_a) -> eval_f_while.cond_in(v_a)
	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.body_in(v_a.addr.0) [ v_a.addr.0 > 1 ]
	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.end_in() [ v_a.addr.0 <= 1 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(0) [ v_a.addr.0 = 0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 < 0 /\ nondef.0 <= 0 /\ nondef.0 > -2 /\ nondef.1 <= 0 /\ nondef.1 > v_a.addr.0 /\ nondef.0 < 0 ]
	eval_f_while.end_in() -> eval_f_stop()
	eval_main_start() -> eval_main_stop()

The termination graph of problem 2 contains 1 nontrivial SCC:
3:	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.body_in(v_a.addr.0) [ v_a.addr.0 > 1 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]

A polynomial interpretation with
	Pol(eval_f_while.cond_in) = 2*X_1 + 1
	Pol(eval_f_while.body_in) = 2*X_1
removes the following rules from problem 3:
	eval_f_while.cond_in(v_a.addr.0) -> eval_f_while.body_in(v_a.addr.0) [ v_a.addr.0 > 1 ]
	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(nondef.1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 = 0 ]
We thus obtain the following problem:
4:	eval_f_while.body_in(v_a.addr.0) -> eval_f_while.cond_in(v_a.addr.0 - 1) [ v_a.addr.0 > 0 /\ nondef.0 >= 0 /\ nondef.0 < 2 /\ nondef.1 >= 0 /\ nondef.1 < v_a.addr.0 /\ nondef.0 > 0 ]

The termination graph of problem 4 contains no nontrivial SCC.

Termination successfully shown!

Time: 1.679 sec (SMT: 1.651 sec)
